{{! 1. 모드에 따라 문구 변경}}
<h1>[{{title}} 글 {{#if (eq mode "create")}}작성{{else}}수정{{/if}}</h1>
<div>
    {{! 2. mode에 따라 폼이 반영되는 URL 변경 }}
    <form name="boardForm" method="post" {{#if (eq mode "create")}} action="/write" {{else}}action="/modify" {{/if}}>
    {{! 3. 수정 모드인 때는 ID값을 폼통해 전송}}
    {{#if (eq mode "modify")}}
    <input type="hidden" name="id" value="{{post._id}}" />
    {{/if}}

    {{!글 작성은 form 택를 사용 다른 곳에서도 form을 찾을 수 있도록 name을 준다 method HTTO의 POST 통신으로 데이터를 전송한다는 의미 ACTION에는 서버의 주소값 URL이 write인 핸들러 함수 필요}}

    {{! 4. 수정 모드인 경우 제목을 넣어줍니다.}}
    <div>
        <label>제목</label>
        <input type="text" name="title" placeholder="제목을 넣어주세요" value="{{post.title}}" />
    </div>
    {{!제목은 label 태그와 input 태그로 이루어진다. placeholder: 아무 값도 없는 경우 입력을 유도하기 위해 }}
    <div>
        <label>이름</label>
        <input type="text" name="writer" placeholder="이름을 넣어주세요" value="{{post.writer}}" />
    </div>
    {{!이름 입력란은 제목 입력란과 동일하며 이름(name 속성)만 다르다.}}
    <div>
        <label>비밀번호</label>
        <input type="password" name="password" placeholder="비밀번호를 넣어주세요" />
    </div>
    {{!비밀번호는 input 태그의 타입으로 password를 주면 된다. 이 경우 글자가 마스킹되어서 표시됩니다.}}
    <div>
    <div>
        <label>본문을 입력하세요</label>
        <textarea placeholder="본문" name="context" cols="50" rows="10">{{post.content}}</textarea>
        <br />

    {{!본문은 textarea 태그를 사용합니다. 이름은 content이고 가로(cols) 50글자 세로(rows) 10줄의 기본 크기를 가집니다 }}

    <div>
        <button type="submit">저장</button>
        <button type="button" onclick="location.href='/'">취소</button>
    </div>
    {{!버튼은 폼의 내용을 전송(summit)하는 [저장] 버튼과 [취소] 버튼을 둔다. [취소]버튼을 누르면 / <= 기본 리스트 페이지로 돌아간다.}}
    </div>
    </form>
</div>